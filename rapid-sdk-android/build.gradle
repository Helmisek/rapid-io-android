apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.github.dcendents.android-maven'

android {
	compileSdkVersion 25
	buildToolsVersion "25.0.2"
	defaultConfig {
		minSdkVersion 15
		targetSdkVersion 25
		versionCode 1
		versionName libraryVersion
		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
		buildConfigField "boolean", "RELEASE", isRelease? "true" : "false"
	}

	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}
}

dependencies {
	compile fileTree(dir: 'libs', include: ['*.jar'])

	compile 'com.jakewharton:disklrucache:2.0.2'
	provided 'com.android.support:recyclerview-v7:25.4.0'


	provided "android.arch.lifecycle:runtime:1.0.0-alpha4"
	provided "android.arch.lifecycle:extensions:1.0.0-alpha4"

	testCompile 'junit:junit:4.12'
	testCompile 'org.skyscreamer:jsonassert:1.5.0'
	testCompile "android.arch.lifecycle:runtime:1.0.0-alpha4"
	testCompile "android.arch.lifecycle:extensions:1.0.0-alpha4"

	androidTestCompile 'com.android.support:support-annotations:25.4.0'
	androidTestCompile 'com.android.support.test:runner:0.5'
	androidTestCompile 'com.android.support.test:rules:0.5'
	// Optional -- Hamcrest library
	androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
}


android.libraryVariants.all { variant ->
	task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
		description "Generates Javadoc for $variant.name."

		title "Rapid.io Android API Reference"
		source = variant.javaCompile.source
		ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
		classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
		options.links("http://docs.oracle.com/javase/7/docs/api/");
		options.links("http://d.android.com/reference/");
		exclude '**/BuildConfig.java'
		exclude '**/R.java'
		exclude '**/me/nimavat/shortid/**'
		exclude '**/io/rapid/utility/**'
		exclude '**/RapidInitProvider.java'
		failOnError false
		destinationDir = file("../docs/")
	}
}

// add Maven publish script
apply from: '../publish.gradle'